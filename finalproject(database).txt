------------------------ROLE_F--------------------------------------
CREATE TABLE Role_F(
RoleID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
Position VARCHAR2 (50 CHAR)
);
------------------------LOGIN_F--------------------------------------
CREATE TABLE LOGIN_F(
LoginID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
Username VARCHAR2(255 BYTE) CONSTRAINT Email_uq UNIQUE, 
passwordHash VARCHAR2 ,
passwordsalt VARCHAR2

);
------------------------Card_F--------------------------------------
CREATE TABLE Card_F(
CardId NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
CCV VARCHAR2 ,
Expirededate Date ,
Balance FLOAT ,
Cardnumber number,
Cardtype VARCHAR2
);
//baha
------------------------User_F--------------------------------------
CREATE TABLE User_F(
UserId NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
Firstname VARCHAR2 ,
Lastname VARCHAR2,
Email Varchar2,
Birthdate date,
Image VARCHAR2,
CardId NUMBER,
LoginID number,
RoleID number,
constraint CardId_FK Foreign key (CardId) REFERENCES Card_F (CardId) on delete set null,
constraint LoginID_FK Foreign key (LoginID) REFERENCES Login_F (LoginID) on delete  Cacade,
constraint RoleF_FK Foreign key (RoleID) REFERENCES Role_F (RoleID) on delete set null
);
------------------------Website_F--------------------------------------
CREATE TABLE Website_F
(
WebsiteId INT GENERATED BY DEFAULT AS IDENTITY  PRIMARY KEY ,
WebsiteName VARCHAR2(50) NOT NULL ,
LogoPath VARCHAR2(300) ,
BackGroundImg VARCHAR2(300) ,
TelePhone VARCHAR2(50),
email VARCHAR2(50) not null,
Address VARCHAR2(50),
worktime VARCHAR2,
Wallet FLOAT,
AdminId INT,
constraint UserId_FK Foreign key (AdminId) REFERENCES User_F (UserId) on delete set null 
);
------------------------AboutUs_F--------------------------------------
 create Table AboutUs_F(
AboutUsId INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
Description VARCHAR2(300),
ImagePath VARCHAR2(300),
WebsiteId int,
constraint AboutUs_FK Foreign key (WebsiteId) REFERENCES Website_F (WebsiteId) on delete set null 
);
//salah
 ------------------------ContactUs_F--------------------------------------
 create table ContactUs_F(
 
ContactUsId INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
PersonalName VARCHAR2(50),
PhoneNumber VARCHAR2(50),
Subject VARCHAR2(150),
Message VARCHAR2(300),
WebsiteId int,
constraint ContactUs_FK Foreign key (WebsiteId) REFERENCES Website_F (WebsiteId) on delete set null 

);
 ------------------------Testimonial_f--------------------------------------

create table Testimonial_F (
TestimonialId INT GENERATED BY DEFAULT AS IDENTITY  PRIMARY KEY ,
PersonalName VARCHAR2(50),
ImagePath VARCHAR2(300),
feedback VARCHAR2(300),
Status Varchar2,
WebsiteId int,
constraint Testimonial_FK Foreign key (WebsiteId) REFERENCES Website_F (WebsiteId) on delete set null 
);
-------------------------------------------hall---------------------------------------------
create table hall_F(
hallId INT GENERATED BY DEFAULT AS IDENTITY  PRIMARY KEY,
name VARCHAR2 ,
Capacity number  ,
--Status number DEFAULT 0 ,
waiters number DEFAULT 0,
sale number DEFAULT 0 ,
review number ,
Resrvitionprice FLOAT,
locationid INT ,
constraint locationid_FK Foreign key (locationid) REFERENCES location_f (locationid) on delete cascade

);
//محمود

------------------------location_f--------------------------------------
create table location_f(
locationid INT GENERATED BY DEFAULT AS IDENTITY  PRIMARY KEY,
city varchar2,
country varchar2,
latitude  VARCHAR2(255),
longitude VARCHAR2(255)
);
------------------------image_f--------------------------------------
create table image_f(
imageid INT GENERATED BY DEFAULT AS IDENTITY  PRIMARY KEY,
imageUrl varchar2(300),
Description Varchar,
Hallid INT ,
constraint hallid_FK Foreign key (Hallid )REFERENCES Hall_f (hallId) on delete cascade

);
------------------------event_f--------------------------------------
create table event_f(
eventid INT GENERATED BY DEFAULT AS IDENTITY  PRIMARY KEY,
eventtype varchar2(255),
startDate date DEFAULT SYSTIMESTAMP, 
endDate date DEFAULT SYSTIMESTAMP,
status varchar2,
eventid int ,
hallId INT,
constraint hall_F_FK Foreign key (hallId) REFERENCES hall_F (hallId) on delete set null ,
);
//fadel








